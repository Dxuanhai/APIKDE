// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"


}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Profile {
  id        Int       @id @default(autoincrement())
  fullName  String    @db.VarChar(150) 
  email     String    @db.VarChar(100) @unique
  password  String    @db.VarChar(100) 
  genders   String    @db.TinyText()

  roleId  Int
  role Role  @relation(fields: [roleId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@index([roleId])
}

model Role {
  id        Int       @id @default(autoincrement())
  roleName  String    @db.VarChar(150) @unique
 
  profiles Profile[]
  permission RolesOnPermissions[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
}

model Permission {
  id        Int       @id @default(autoincrement())
  permissionName      String    @db.VarChar(150) @unique
  description String @db.Text


  roles RolesOnPermissions[]

}

model RolesOnPermissions {
  role        Role      @relation(fields: [roleId], references: [id] , onDelete: Cascade)
  roleId     Int 
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  permissionId Int 

 createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  @@id([roleId, permissionId])
}



model PermissonHistory {
  id        Int       @id @default(autoincrement())
  fullName  String    @db.VarChar(150) @unique
  role     String    @db.VarChar(100) @unique
  permission  String    @db.VarChar(100) 

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")


}